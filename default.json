{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended",
    "config:best-practices",
    ":semanticCommitsDisabled",
    ":automergeStableNonMajor",
    ":automergePatch",
    ":automergeDigest",
    "regexManagers:dockerfileVersions",
    "regexManagers:githubActionsVersions",
    "regexManagers:tfvarsVersions",
    "group:allDigest",
    "schedule:earlyMondays"
  ],
  "timezone": "America/New_York",
  "pinDigest": {
    "automerge": true
  },
  "allowPostUpgradeCommandTemplating": true,
  "allowedPostUpgradeCommands": [
    "^sed"
  ],
  "prHourlyLimit": 0,
  "onboarding": false,
  "requireConfig": "optional",
  "autodiscover": true,
  "rebaseWhen": "behind-base-branch",
  "automerge": false,
  "labels": ["renovate"],
  "printConfig": true,
  "packageRules": [
    {
      "matchPackageNames": ["renovatebot/github-action"],
      "automerge": true
    },
    {
      "matchManagers": ["github-actions"],
      "automerge": true
    },
    {
      "matchUpdateTypes": ["minor", "patch"],
      "matchCurrentVersion": "!/^v?0/",
      "automerge": true
    },
    {
      "matchDatasources": ["custom.balena-cloud"],
      "automerge": false
    },
    {
      "matchDatasources": ["custom.balena-cloud"],
      "matchPackageNames": ["/\\-amd64$/"],
      "groupName": "bh.cr/{{{replace '\\-amd64$' '' depName}}}"
    },
    {
      "matchDatasources": ["custom.balena-cloud"],
      "matchPackageNames": ["/\\-aarch64$/"],
      "groupName": "bh.cr/{{{replace '\\-aarch64$' '' depName}}}"
    },
    {
      "matchDatasources": ["custom.balena-cloud"],
      "matchPackageNames": ["/\\-armv7hf$/"],
      "groupName": "bh.cr/{{{replace '\\-armv7hf$' '' depName}}}"
    },
    {
      "matchManagers": ["dockerfile"],
      "matchPackageNames": ["bh.cr/**"],
      "enabled": false
    }
  ],
  "customManagers": [
    {
      "customType": "regex",
      "fileMatch": ["(^|/)balena\\.ya?ml$"],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>[a-z-.]+?) depName=(?<depName>[^\\s]+?)(?: (?:packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\s]+?))?(?: registryUrl=(?<registryUrl>[^\\s]+?))?\\s+version:\\s*[\"']?(?<currentVersion>.+?)[\"']?\\s"
      ],
      "currentValueTemplate": "{{{currentVersion}}}"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "(^|/|\\.)([Dd]ocker|[Cc]ontainer)file$",
        "(^|/)([Dd]ocker|[Cc]ontainer)file[^/]*$"
      ],
      "matchStrings": [
        "FROM bh\\.cr/(?<depName>[\\w\\-]+/[\\w\\-]+)(/(?<currentValue>[0-9\\.]+))?(@(?<currentDigest>\\w+:\\w+))?"
      ],
      "datasourceTemplate": "custom.balena-cloud"
    }
  ],
  "customDatasources": {
    "balena-cloud": {
      "defaultRegistryUrlTemplate": "https://api.balena-cloud.com/v7/release?$filter=(belongs_to__application/any(a:a/slug%20eq%20'{{packageName}}'))%20and%20status%20eq%20%27success%27%20and%20is_final%20eq%20true&$select=commit,is_finalized_at__date,raw_version",
      "transformTemplates": [
        "{ \"releases\": $map($.d, function($v) { return { \"version\": $v.raw_version, \"releaseTimestamp\": $v.is_finalized_at__date, \"digest\": $v.commit } }) }"
      ]
    }
  }
}
